#ifndef CHAIN_LINK_ROTATION_H_
#define CHAIN_LINK_ROTATION_H_

#include <Eigen/Geometry>

//const static int view_num = 42;
const static int view_num = 1;
Eigen::Matrix4f Views[view_num];

const static int grip_num = 36;
Eigen::Matrix3f GripRots[grip_num];
Eigen::Vector3f GripPoints[grip_num];

void InitPointsAndRotatations()
{
    /*Views[0] <<
               0,    -0.850651,    -0.525731,   0.00145556,
            1,            0,            0, -0.000636778,
            0,    -0.525731,     0.850651,     0.765217,
            0,            0,            0,            1;
    Views[1] <<
               0,   -0.850651,    0.525731, -0.00145556,
            -1,           0,           0, 0.000636778,
            0,   -0.525731,   -0.850651,    0.769927,
            0,           0,           0,           1;
    Views[2] <<
               1.11741e-17,   -0.850651,   -0.525731,  0.00145556,
            -1,           0,           0, 0.000636778,
            0,    0.525731,   -0.850651,    0.769927,
            0,           0,           0,           1;
    Views[3] <<
               -0.850651,   -0.525731,           0, 0.000541676,
            0,           0,          -1,  0.00276865,
            0.525731,   -0.850651,           0,    0.767237,
            0,           0,           0,           1;
    Views[4] <<
               0.850651,    -0.525731,            0, -0.000541676,
            0,            0,           -1,   0.00276865,
            0.525731,     0.850651,            0,     0.767237,
            0,            0,            0,            1;
    Views[5] <<
               0.850651,    -0.525731,            0, -0.000541676,
            0,            0,            1,  -0.00276865,
            -0.525731,    -0.850651,            0,     0.767907,
            0,            0,            0,            1;
    Views[6] <<
               -0.850651,   -0.525731,           0, 0.000541676,
            0,           0,           1, -0.00276865,
            -0.525731,    0.850651,           0,    0.767907,
            0,           0,           0,           1;
    Views[7] <<
               -1.11741e-17,    -0.850651,     0.525731,  -0.00145556,
            1,            0,            0, -0.000636778,
            0,     0.525731,     0.850651,     0.765217,
            0,            0,            0,            1;
    Views[8] <<
               0,          -1,           0, 5.45686e-11,
            -0.525731,           0,    0.850651, -0.00202038,
            -0.850651,           0,   -0.525731,    0.769569,
            0,           0,           0,           1;
    Views[9] <<
               0,          -1,           0, 5.45686e-11,
            -0.525731,           0,   -0.850651,  0.00268993,
            0.850651,           0,   -0.525731,    0.768486,
            0,           0,           0,           1;
    Views[10] <<
                0,          -1,           0, 5.45686e-11,
            0.525731,           0,   -0.850651,  0.00202038,
            0.850651,           0,    0.525731,    0.765575,
            0,           0,           0,           1;
    Views[11] <<
                0,          -1,           0, 5.45686e-11,
            0.525731,           0,    0.850651, -0.00268993,
            -0.850651,           0,    0.525731,    0.766658,
            0,           0,           0,           1;
    Views[12] <<
                -0.425325,   -0.587785,   -0.688191,   0.0021762,
            0.850651,           0,   -0.525731, 0.000913888,
            0.309017,   -0.809017,         0.5,     0.76784,
            0,           0,           0,           1;
    Views[13] <<
                0.425325,   -0.587785,   -0.688191,  0.00163452,
            0.850651,           0,    0.525731, -0.00199724,
            -0.309017,   -0.809017,         0.5,    0.768233,
            0,           0,           0,           1;
    Views[14] <<
                0,            0,           -1,   0.00276865,
            1,            0,            0, -0.000636778,
            0,           -1,            0,     0.769421,
            0,            0,            0,            1;
    Views[15] <<
                0.425325,    -0.587785,     0.688191,   -0.0021762,
            -0.850651,            0,     0.525731, -0.000913888,
            -0.309017,    -0.809017,         -0.5,     0.771002,
            0,            0,            0,            1;
    Views[16] <<
                -0.425325,   -0.587785,    0.688191, -0.00163452,
            -0.850651,           0,   -0.525731,  0.00199724,
            0.309017,   -0.809017,        -0.5,    0.770608,
            0,           0,           0,           1;
    Views[17] <<
                -0.16246,    -0.951057,     0.262866, -0.000624331,
            -0.850651,            0,    -0.525731,   0.00199724,
            0.5,    -0.309017,    -0.809017,     0.771342,
            0,            0,            0,            1;
    Views[18] <<
                0,          -1,           0, 5.45686e-11,
            -1,           0,           0, 0.000636778,
            0,           0,          -1,    0.772189,
            0,           0,           0,           1;
    Views[19] <<
                0.16246,   -0.951057,   -0.262866, 0.000624331,
            -0.850651,           0,   -0.525731,  0.00199724,
            0.5,    0.309017,   -0.809017,    0.771342,
            0,           0,           0,           1;
    Views[20] <<
                0.16246,    -0.951057,     0.262866, -0.000831233,
            -0.850651,            0,     0.525731, -0.000913888,
            -0.5,    -0.309017,    -0.809017,     0.771979,
            0,            0,            0,            1;
    Views[21] <<
                -0.16246,    -0.951057,    -0.262866,  0.000831233,
            -0.850651,            0,     0.525731, -0.000913888,
            -0.5,     0.309017,    -0.809017,     0.771979,
            0,            0,            0,            1;
    Views[22] <<
                0.16246,   -0.951057,   -0.262866, 0.000624331,
            0.850651,           0,    0.525731, -0.00199724,
            -0.5,   -0.309017,    0.809017,    0.767499,
            0,           0,           0,           1;
    Views[23] <<
                0,           -1,            0,  5.45686e-11,
            1,            0,            0, -0.000636778,
            0,            0,            1,     0.766652,
            0,            0,            0,            1;
    Views[24] <<
                -0.16246,    -0.951057,     0.262866, -0.000624331,
            0.850651,            0,     0.525731,  -0.00199724,
            -0.5,     0.309017,     0.809017,     0.767499,
            0,            0,            0,            1;
    Views[25] <<
                -0.16246,   -0.951057,   -0.262866, 0.000831233,
            0.850651,           0,   -0.525731, 0.000913888,
            0.5,   -0.309017,    0.809017,    0.766863,
            0,           0,           0,           1;
    Views[26] <<
                0.16246,    -0.951057,     0.262866, -0.000831233,
            0.850651,            0,    -0.525731,  0.000913888,
            0.5,     0.309017,     0.809017,     0.766863,
            0,            0,            0,            1;
    Views[27] <<
                0.425325,  -0.587785,  -0.688191, 0.00163452,
            -0.850651,          0,  -0.525731, 0.00199724,
            0.309017,   0.809017,       -0.5,   0.770608,
            0,          0,          0,          1;
    Views[28] <<
                -0.425325,    -0.587785,    -0.688191,    0.0021762,
            -0.850651,            0,     0.525731, -0.000913888,
            -0.309017,     0.809017,         -0.5,     0.771002,
            0,            0,            0,            1;
    Views[29] <<
                0,           0,          -1,  0.00276865,
            -1,           0,           0, 0.000636778,
            0,           1,           0,    0.769421,
            0,           0,           0,           1;
    Views[30] <<
                -0.425325,   -0.587785,    0.688191, -0.00163452,
            0.850651,           0,    0.525731, -0.00199724,
            -0.309017,    0.809017,         0.5,    0.768233,
            0,           0,           0,           1;
    Views[31] <<
                0.425325,   -0.587785,    0.688191,  -0.0021762,
            0.850651,           0,   -0.525731, 0.000913888,
            0.309017,    0.809017,         0.5,     0.76784,
            0,           0,           0,           1;
    Views[32] <<
                -0.467086,   -0.866025,   -0.178411, 0.000791388,
            0.356822,           0,   -0.934172,  0.00235918,
            0.809017,        -0.5,    0.309017,     0.76805,
            0,           0,           0,           1;
    Views[33] <<
                -0.467086,    -0.866025,     0.178411, -0.000196527,
            -0.356822,            0,    -0.934172,   0.00281361,
            0.809017,         -0.5,    -0.309017,     0.769761,
            0,            0,            0,            1;
    Views[34] <<
                0,          -1,           0, 5.45686e-11,
            0,           0,          -1,  0.00276865,
            1,           0,           0,    0.768784,
            0,           0,           0,           1;
    Views[35] <<
                0.467086,   -0.866025,   -0.178411, 0.000196527,
            -0.356822,           0,   -0.934172,  0.00281361,
            0.809017,         0.5,   -0.309017,    0.769761,
            0,           0,           0,           1;
    Views[36] <<
                0.467086,    -0.866025,     0.178411, -0.000791388,
            0.356822,            0,    -0.934172,   0.00235918,
            0.809017,          0.5,     0.309017,      0.76805,
            0,            0,            0,            1;
    Views[37] <<
                0.467086,    -0.866025,     0.178411, -0.000791388,
            -0.356822,            0,     0.934172,  -0.00235918,
            -0.809017,         -0.5,    -0.309017,     0.770792,
            0,            0,            0,            1;
    Views[38] <<
                0.467086,   -0.866025,   -0.178411, 0.000196527,
            0.356822,           0,    0.934172, -0.00281361,
            -0.809017,        -0.5,    0.309017,     0.76908,
            0,           0,           0,           1;
    Views[39] <<
                0,          -1,           0, 5.45686e-11,
            0,           0,           1, -0.00276865,
            -1,           0,           0,    0.770058,
            0,           0,           0,           1;
    Views[40] <<
                -0.467086,    -0.866025,     0.178411, -0.000196527,
            0.356822,            0,     0.934172,  -0.00281361,
            -0.809017,          0.5,     0.309017,      0.76908,
            0,            0,            0,            1;
    Views[41] <<
                -0.467086,   -0.866025,   -0.178411, 0.000791388,
            -0.356822,           0,    0.934172, -0.00235918,
            -0.809017,         0.5,   -0.309017,    0.770792,
            0,           0,           0,           1;

    /* // Invert matrices
    for (int i = 0; i < view_num; i++)
    {
        Eigen::Matrix3f Ri;
        Ri.block(0,0,2,2) << Views[i].block(0,0,2,2);
        Ri = Ri.inverse().eval();
        Eigen::RowVector3f d;
        d << Views[i].col(3)(0), Views[i].col(3)(1), Views[i].col(3)(2);
        // Eigen is useless
        float x = -(Ri(0, 0) * d(0) + Ri(0, 1) * d(1) + Ri(0, 2) * d(2));
        float y = -(Ri(1, 0) * d(0) + Ri(1, 1) * d(1) + Ri(1, 2) * d(2));
        float z = -(Ri(2, 0) * d(0) + Ri(2, 1) * d(1) + Ri(2, 2) * d(2));

        Views[i].block(0,0,2,2) << Ri.block(0,0,2,2);
        Views[i].col(3) << x, y, z, 1;
        Views[i].row(3) << 0,0,0,1;
    }*/

//
//
//
    /*Views[0] <<
     0.0, 0.0, 1.0, 0.000636778,
     -0.525731, -0.850651, 0.0, 0.403536472197,
     0.850651, -0.525731, 0.0, -0.650167373253,
     0.0, 0.0, 0.0, 1.0;
    Views[1] <<
     0.0, 0.0, -1.0, 0.00063677,
     -0.525731, -0.850651, 0.0, 0.403536318067,
     -0.850651, 0.525731, 0.0, 0.655704405491,
     0.0, 0.0, 0.0, 1.0;
    Views[2] <<
     0.0, 1.11741e-17, -1.0, 0.000636778,
     0.525731, -0.850651, 0.0, -0.403536318067,
     -0.850651, -0.525731, 0.0, 0.655704405491,
     0.0, 0.0, 0.0, 1.0;
    Views[3] <<
     0.525731, -0.850651, 0.0, -0.402899498016,
     -0.850651, -0.525731, 0.0, 0.652935697152,
     0.0, 0.0, -1.0, 0.00276865,
     0.0, 0.0, 0.0, 1.0;
    Views[4] <<
     0.525731, 0.850651, 0.0, -0.402899498016,
     0.850651, -0.525731, 0.0, -0.652935697152,
     0.0, 0.0, -1.0, 0.00276865,
     0.0, 0.0, 0.0, 1.0;
    Views[5] <<
     -0.525731, 0.850651, 0.0, 0.404173292248,
     -0.850651, -0.525731, 0.0, 0.652936081592,
     0.0, 0.0, 1.0, 0.00276865,
     0.0, 0.0, 0.0, 1.0;
    Views[6] <<
     -0.525731, -0.850651, 0.0, 0.404173292248,
     0.850651, -0.525731, 0.0, -0.652936081592,
     0.0, 0.0, 1.0, 0.00276865,
     0.0, 0.0, 0.0, 1.0;
    Views[7] <<
     0.0, -1.11741e-17, 1.0, 0.000636778,
     0.525731, -0.850651, 0.0, -0.403536472197,
     0.850651, 0.525731, 0.0, -0.650167373253,
     0.0, 0.0, 0.0, 1.0;
    Views[8] <<
     -0.850651, 0.0, -0.525731, 0.653572463021,
     0.0, -1.0, 0.0, 5.45686e-11,
     -0.525731, 0.0, 0.850651, 0.406304918206,
     0.0, 0.0, 0.0, 1.0;
    Views[9] <<
     0.850651, 0.0, -0.525731, -0.652299204797,
     0.0, -1.0, 0.0, 5.45686e-11,
     -0.525731, 0.0, -0.850651, 0.40630510491,
     0.0, 0.0, 0.0, 1.0;
    Views[10] <<
     0.850651, 0.0, 0.525731, -0.652299315723,
     0.0, -1.0, 0.0, 5.45686e-11,
     0.525731, 0.0, -0.850651, -0.400767872058,
     0.0, 0.0, 0.0, 1.0;
    Views[11] <<
     -0.850651, 0.0, 0.525731, 0.653572573947,
     0.0, -1.0, 0.0, 5.45686e-11,
     0.525731, 0.0, 0.850651, -0.400767685354,
     0.0, 0.0, 0.0, 1.0;
    Views[12] <<
     0.309017, -0.425325, 0.850651, -0.237127420756,
     -0.809017, -0.587785, 0.0, 0.622474750997,
     0.5, -0.688191, -0.525731, -0.381941899494,
     0.0, 0.0, 0.0, 1.0;
    Views[13] <<
     -0.309017, 0.425325, 0.850651, 0.238400808945,
     -0.809017, -0.587785, 0.0, 0.622474303299,
     0.5, -0.688191, 0.525731, -0.381941627064,
     0.0, 0.0, 0.0, 1.0;
    Views[14] <<
     0.0, 0.0, 1.0, 0.000636778,
     -1.0, 0.0, 0.0, 0.769421,
     0.0, -1.0, 0.0, 0.00276865,
     0.0, 0.0, 0.0, 1.0;
    Views[15] <<
     -0.309017, 0.425325, -0.850651, 0.238400917558,
     -0.809017, -0.587785, 0.0, 0.622474587317,
     -0.5, 0.688191, 0.525731, 0.387479100506,
     0.0, 0.0, 0.0, 1.0;
    Views[16] <<
     0.309017, -0.425325, -0.850651, -0.237127220352,
     -0.809017, -0.587785, 0.0, 0.622474225998,
     -0.5, 0.688191, -0.525731, 0.387478872936,
     0.0, 0.0, 0.0, 1.0;
    Views[17] <<
     0.5, -0.16246, -0.850651, -0.384073474611,
     -0.309017, -0.951057, 0.0, 0.237764016446,
     -0.809017, 0.262866, -0.525731, 0.625242917189,
     0.0, 0.0, 0.0, 1.0;
    Views[18] <<
     0.0, 0.0, -1.0, 0.000636778,
     0.0, -1.0, 0.0, 5.45686e-11,
     -1.0, 0.0, 0.0, 0.772189,
     0.0, 0.0, 0.0, 1.0;
    Views[19] <<
     0.5, 0.16246, -0.850651, -0.384073474611,
     0.309017, -0.951057, 0.0, -0.237764016446,
     -0.809017, -0.262866, -0.525731, 0.625242917189,
     0.0, 0.0, 0.0, 1.0;
    Views[20] <<
     -0.5, 0.16246, -0.850651, 0.385347142372,
     -0.309017, -0.951057, 0.0, 0.23776408468,
     -0.809017, 0.262866, 0.525731, 0.625243096789,
     0.0, 0.0, 0.0, 1.0;
    Views[21] <<
     -0.5, -0.16246, -0.850651, 0.385347142372,
     0.309017, -0.951057, 0.0, -0.23776408468,
     -0.809017, -0.262866, 0.525731, 0.625243096789,
     0.0, 0.0, 0.0, 1.0;
    Views[22] <<
     -0.5, 0.16246, 0.850651, 0.385347025389,
     -0.309017, -0.951057, 0.0, 0.237764012851,
     0.809017, -0.262866, 0.525731, -0.619705612108,
     0.0, 0.0, 0.0, 1.0;
    Views[23] <<
     0.0, 0.0, 1.0, 0.000636778,
     0.0, -1.0, 0.0, 5.45686e-11,
     1.0, 0.0, 0.0, -0.766652,
     0.0, 0.0, 0.0, 1.0;
    Views[24] <<
     -0.5, -0.16246, 0.850651, 0.385347025389,
     0.309017, -0.951057, 0.0, -0.237764012851,
     0.809017, 0.262866, 0.525731, -0.619705612108,
     0.0, 0.0, 0.0, 1.0;
    Views[25] <<
     0.5, -0.16246, 0.850651, -0.384073857628,
     -0.309017, -0.951057, 0.0, 0.237764253634,
     0.809017, -0.262866, -0.525731, -0.619706241525,
     0.0, 0.0, 0.0, 1.0;
    Views[26] <<
     0.5, 0.16246, 0.850651, -0.384073857628,
     0.309017, -0.951057, 0.0, -0.237764253634,
     0.809017, 0.262866, -0.525731, -0.619706241525,
     0.0, 0.0, 0.0, 1.0;
    Views[27] <<
     0.309017, 0.425325, -0.850651, -0.237127220352,
     0.809017, -0.587785, 0.0, -0.622474225998,
     -0.5, -0.688191, -0.525731, 0.387478872936,
     0.0, 0.0, 0.0, 1.0;
    Views[28] <<
     -0.309017, -0.425325, -0.850651, 0.238400917558,
     0.809017, -0.587785, 0.0, -0.622474587317,
     -0.5, -0.688191, 0.525731, 0.387479100506,
     0.0, 0.0, 0.0, 1.0;
    Views[29] <<
     0.0, 0.0, -1.0, 0.000636778,
     1.0, 0.0, 0.0, -0.769421,
     0.0, -1.0, 0.0, 0.00276865,
     0.0, 0.0, 0.0, 1.0;
    Views[30] <<
     -0.309017, -0.425325, 0.850651, 0.238400808945,
     0.809017, -0.587785, 0.0, -0.622474303299,
     0.5, 0.688191, 0.525731, -0.381941627064,
     0.0, 0.0, 0.0, 1.0;
    Views[31] <<
     0.309017, 0.425325, 0.850651, -0.237127420756,
     0.809017, -0.587785, 0.0, -0.622474750997,
     0.5, 0.688191, -0.525731, -0.381941899494,
     0.0, 0.0, 0.0, 1.0;
    Views[32] <<
     0.809017, -0.467086, 0.356822, -0.621837667921,
     -0.5, -0.866025, 0.0, 0.384710361793,
     0.309017, -0.178411, -0.934172, -0.234995434627,
     0.0, 0.0, 0.0, 1.0;
    Views[33] <<
     0.809017, -0.467086, -0.356822, -0.621837572,
     -0.5, -0.866025, 0.0, 0.384710302705,
     -0.309017, 0.178411, -0.934172, 0.240532693197,
     0.0, 0.0, 0.0, 1.0;
    Views[34] <<
     1.0, 0.0, 0.0, -0.768784,
     0.0, -1.0, 0.0, 5.45686e-11,
     0.0, 0.0, -1.0, 0.00276865,
     0.0, 0.0, 0.0, 1.0;
    Views[35] <<
     0.809017, 0.467086, -0.356822, -0.621837572,
     0.5, -0.866025, 0.0, -0.384710302705,
     -0.309017, -0.178411, -0.934172, 0.240532693197,
     0.0, 0.0, 0.0, 1.0;
    Views[36] <<
     0.809017, 0.467086, 0.356822, -0.621837667921,
     0.5, -0.866025, 0.0, -0.384710361793,
     0.309017, 0.178411, -0.934172, -0.234995434627,
     0.0, 0.0, 0.0, 1.0;
    Views[37] <<
     -0.809017, 0.467086, -0.356822, 0.623111670393,
     -0.5, -0.866025, 0.0, 0.384710638207,
     -0.309017, 0.178411, 0.934172, 0.240532903687,
     0.0, 0.0, 0.0, 1.0;
    Views[38] <<
     -0.809017, 0.467086, 0.356822, 0.623110957297,
     -0.5, -0.866025, 0.0, 0.384710197295,
     0.309017, -0.178411, 0.934172, -0.2349953361,
     0.0, 0.0, 0.0, 1.0;
    Views[39] <<
     -1.0, 0.0, 0.0, 0.770058,
     0.0, -1.0, 0.0, 5.45686e-11,
     0.0, 0.0, 1.0, 0.00276865,
     0.0, 0.0, 0.0, 1.0;
    Views[40] <<
     -0.809017, -0.467086, 0.356822, 0.623110957297,
     0.5, -0.866025, 0.0, -0.384710197295,
     0.309017, 0.178411, 0.934172, -0.2349953361,
     0.0, 0.0, 0.0, 1.0;
    Views[41] <<
     -0.809017, -0.467086, -0.356822, 0.623111670393,
     0.5, -0.866025, 0.0, -0.384710638207,
     -0.309017, -0.178411, 0.934172, 0.240532903687,
     0.0, 0.0, 0.0, 1.0;*/
//
//
//
    //
    // For one view
    Views[0] <<
     1.0, 0.0, 0.0, 0.0,
     0.0, 1.0, 0.0, 0.0,
     0.0, 0.1, 1.0, 0.0,
     0.0, 0.0, 0.0, 1.0;
    //

    // Set up grip points
    Eigen::Matrix3f id, x90, y90, z90, nx90, ny90, nz90, x180, y180, z180;
    float cosT = cosf(M_PI/2);
    float sinT = sinf(M_PI/2);
    float ncosT = cosf(-M_PI/2);
    float nsinT = sinf(-M_PI/2);
    float cosTT = cosf(M_PI);
    float sinTT = sinf(M_PI);

    id <<    1.0f, 0.0f, 0.0f,
            0.0f, 1.0f, 0.0f,
            0.0f, 0.0f, 1.0f;

    x90 <<
             1.0f,   0.0f,   0.0f,
             0.0f,   cosT,  -sinT,
             0.0f,   sinT,   cosT;
    y90 <<
             cosT,   0.0f,   sinT,
             0.0f,   1.0f,   0.0f,
            -sinT,   0.0f,   cosT;
    z90 <<
             cosT,   sinT,   0.0f,
            -sinT,   cosT,   0.0f,
             0.0f,   0.0f,   1.0f;

    nx90 <<
              1.0f,   0.0f,    0.0f,
              0.0f,  ncosT,  -nsinT,
              0.0f,  nsinT,   ncosT;
    ny90 <<
             ncosT,   0.0f,   nsinT,
              0.0f,   1.0f,    0.0f,
            -nsinT,   0.0f,   ncosT;
    nz90 <<
             ncosT,  nsinT,    0.0f,
            -nsinT,  ncosT,    0.0f,
              0.0f,   0.0f,    1.0f;
    x180 <<
              1.0f,   0.0f,    0.0f,
              0.0f,  cosTT,  -sinTT,
              0.0f,  sinTT,   cosTT;
    y180 <<
             cosTT,   0.0f,   sinTT,
              0.0f,   1.0f,    0.0f,
            -sinTT,   0.0f,   cosTT;
    z180 <<
             cosTT,  sinTT,    0.0f,
            -sinTT,  cosTT,    0.0f,
              0.0f,   0.0f,    1.0f;

    // 8 x ~9 x 3.5
    int i = 0;
    // In meters
    // Middle bar
        // Middle
        GripRots[i] = ny90 * z90;
        GripPoints[i++] << 0.01f, 0.0f, 0.0165f;
        GripRots[i] = ny90 * nz90;
        GripPoints[i++] << 0.01f, 0.0f, 0.0165f;
        //
        GripRots[i] = y90 * z90;
        GripPoints[i++] << -0.01f, 0.0f, 0.0165f;
        GripRots[i] = y90 * nz90;
        GripPoints[i++] << -0.01f, 0.0f, 0.0165f;

        // Top
        GripRots[i] = ny90 * z90;
        GripPoints[i++] << 0.01f, 0.025f, 0.0165f;
        GripRots[i] = ny90 * nz90;
        GripPoints[i++] << 0.01f, 0.025f, 0.0165f;
        //
        GripRots[i] = y90 * z90;
        GripPoints[i++] << -0.01f, 0.025f, 0.0165f;
        GripRots[i] = y90 * nz90;
        GripPoints[i++] << -0.01f, 0.025f, 0.0165f;

        // Bottom
        GripRots[i] = ny90 * z90;
        GripPoints[i++] << 0.01f, -0.025f, 0.0165f;
        GripRots[i] = ny90 * nz90;
        GripPoints[i++] << 0.01f, -0.025f, 0.0165f;
        //
        GripRots[i] = y90 * z90;
        GripPoints[i++] << -0.01f, -0.025f, 0.0165f;
        GripRots[i] = y90 * nz90;
        GripPoints[i++] << -0.01f, -0.025f, 0.0165f;

    // Top Plate Notch Side
        // Middle
        GripRots[i] = ny90;
        GripPoints[i++] << 0.04f, 0.0415f, 0.0f;
        GripRots[i] = ny90 * z180;
        GripPoints[i++] << 0.04f, 0.0415f, 0.0f;
        // Front
        GripRots[i] = y180;
        GripPoints[i++] << 0.0325f, 0.0415f, 0.015f;
        GripRots[i] = y180 * z180;
        GripPoints[i++] << 0.0325f, 0.0415f, 0.015f;
        // Back
        GripRots[i] = id;
        GripPoints[i++] << 0.0325f, 0.0415f, -0.015f;
        GripRots[i] = z180;
        GripPoints[i++] << 0.0325f, 0.0415f, -0.015f;

    // Top Plate Hole Side
        // Middle
        GripRots[i] = y90;
        GripPoints[i++] << -0.04f, 0.0435f, 0.0f;
        GripRots[i] = y90 * z180;
        GripPoints[i++] << -0.04f, 0.0435f, 0.0f;
        // Front
        GripRots[i] = y180;
        GripPoints[i++] << -0.0325f, 0.0435f, 0.015f;
        GripRots[i] = y180 * z180;
        GripPoints[i++] << -0.0325f, 0.0435f, 0.015f;
        // Back
        GripRots[i] = id;
        GripPoints[i++] << -0.0325f, 0.0435f, -0.015f;
        GripRots[i] = z180;
        GripPoints[i++] << -0.0325f, 0.0435f, -0.015f;

    // Bottom Plate Notch Side
        // Middle
        GripRots[i] = ny90;
        GripPoints[i++] << 0.04f, -0.0415f, 0.0f;
        GripRots[i] = ny90 * z180;
        GripPoints[i++] << 0.04f, -0.0415f, 0.0f;
        // Front
        GripRots[i] = id;
        GripPoints[i++] << 0.0325f, -0.0415f, -0.015f;
        GripRots[i] = z180;
        GripPoints[i++] << 0.0325f, -0.0415f, -0.015f;
        // Back
        GripRots[i] = y180;
        GripPoints[i++] << 0.0325f, -0.0415f, 0.015f;
        GripRots[i] = y180 * z180;
        GripPoints[i++] << 0.035f, -0.0415f, 0.015f;

    // Bottom Plate Hole Side
        // Middle
        GripRots[i] = y90;
        GripPoints[i++] << -0.04f, -0.0435f, 0.0f;
        GripRots[i] = y90 * z180;
        GripPoints[i++] << -0.04f, -0.0435f, 0.0f;
        // Front
        GripRots[i] = id;
        GripPoints[i++] << -0.0325f, -0.0435f, -0.015f;
        GripRots[i] =  z180;
        GripPoints[i++] << -0.0325f, -0.0435f, -0.015f;
        // Back
        GripRots[i] = y180;
        GripPoints[i++] << -0.0325f, -0.0435f, 0.015f;
        GripRots[i] = y180 * z180;
        GripPoints[i++] << -0.0325f, -0.0435f, 0.015f;
}

#endif /* CHAIN_LINK_ROTATION_H_ */
