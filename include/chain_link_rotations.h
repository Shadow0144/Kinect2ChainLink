#ifndef CHAIN_LINK_ROTATION_H_
#define CHAIN_LINK_ROTATION_H_

#include <Eigen/Geometry>

Eigen::Matrix4f Views[42];

const static int grip_num = 36;
Eigen::Matrix3f GripRots[grip_num];
Eigen::Vector3f GripPoints[grip_num];

void InitPointsAndRotatations()
{
    Views[0] <<
               0,    -0.850651,    -0.525731,   0.00145556,
            1,            0,            0, -0.000636778,
            0,    -0.525731,     0.850651,     0.765217,
            0,            0,            0,            1;
    Views[1] <<
               0,   -0.850651,    0.525731, -0.00145556,
            -1,           0,           0, 0.000636778,
            0,   -0.525731,   -0.850651,    0.769927,
            0,           0,           0,           1;
    Views[2] <<
               1.11741e-17,   -0.850651,   -0.525731,  0.00145556,
            -1,           0,           0, 0.000636778,
            0,    0.525731,   -0.850651,    0.769927,
            0,           0,           0,           1;
    Views[3] <<
               -0.850651,   -0.525731,           0, 0.000541676,
            0,           0,          -1,  0.00276865,
            0.525731,   -0.850651,           0,    0.767237,
            0,           0,           0,           1;
    Views[4] <<
               0.850651,    -0.525731,            0, -0.000541676,
            0,            0,           -1,   0.00276865,
            0.525731,     0.850651,            0,     0.767237,
            0,            0,            0,            1;
    Views[5] <<
               0.850651,    -0.525731,            0, -0.000541676,
            0,            0,            1,  -0.00276865,
            -0.525731,    -0.850651,            0,     0.767907,
            0,            0,            0,            1;
    Views[6] <<
               -0.850651,   -0.525731,           0, 0.000541676,
            0,           0,           1, -0.00276865,
            -0.525731,    0.850651,           0,    0.767907,
            0,           0,           0,           1;
    Views[7] <<
               -1.11741e-17,    -0.850651,     0.525731,  -0.00145556,
            1,            0,            0, -0.000636778,
            0,     0.525731,     0.850651,     0.765217,
            0,            0,            0,            1;
    Views[8] <<
               0,          -1,           0, 5.45686e-11,
            -0.525731,           0,    0.850651, -0.00202038,
            -0.850651,           0,   -0.525731,    0.769569,
            0,           0,           0,           1;
    Views[9] <<
               0,          -1,           0, 5.45686e-11,
            -0.525731,           0,   -0.850651,  0.00268993,
            0.850651,           0,   -0.525731,    0.768486,
            0,           0,           0,           1;
    Views[10] <<
                0,          -1,           0, 5.45686e-11,
            0.525731,           0,   -0.850651,  0.00202038,
            0.850651,           0,    0.525731,    0.765575,
            0,           0,           0,           1;
    Views[11] <<
                0,          -1,           0, 5.45686e-11,
            0.525731,           0,    0.850651, -0.00268993,
            -0.850651,           0,    0.525731,    0.766658,
            0,           0,           0,           1;
    Views[12] <<
                -0.425325,   -0.587785,   -0.688191,   0.0021762,
            0.850651,           0,   -0.525731, 0.000913888,
            0.309017,   -0.809017,         0.5,     0.76784,
            0,           0,           0,           1;
    Views[13] <<
                0.425325,   -0.587785,   -0.688191,  0.00163452,
            0.850651,           0,    0.525731, -0.00199724,
            -0.309017,   -0.809017,         0.5,    0.768233,
            0,           0,           0,           1;
    Views[14] <<
                0,            0,           -1,   0.00276865,
            1,            0,            0, -0.000636778,
            0,           -1,            0,     0.769421,
            0,            0,            0,            1;
    Views[15] <<
                0.425325,    -0.587785,     0.688191,   -0.0021762,
            -0.850651,            0,     0.525731, -0.000913888,
            -0.309017,    -0.809017,         -0.5,     0.771002,
            0,            0,            0,            1;
    Views[16] <<
                -0.425325,   -0.587785,    0.688191, -0.00163452,
            -0.850651,           0,   -0.525731,  0.00199724,
            0.309017,   -0.809017,        -0.5,    0.770608,
            0,           0,           0,           1;
    Views[17] <<
                -0.16246,    -0.951057,     0.262866, -0.000624331,
            -0.850651,            0,    -0.525731,   0.00199724,
            0.5,    -0.309017,    -0.809017,     0.771342,
            0,            0,            0,            1;
    Views[18] <<
                0,          -1,           0, 5.45686e-11,
            -1,           0,           0, 0.000636778,
            0,           0,          -1,    0.772189,
            0,           0,           0,           1;
    Views[19] <<
                0.16246,   -0.951057,   -0.262866, 0.000624331,
            -0.850651,           0,   -0.525731,  0.00199724,
            0.5,    0.309017,   -0.809017,    0.771342,
            0,           0,           0,           1;
    Views[20] <<
                0.16246,    -0.951057,     0.262866, -0.000831233,
            -0.850651,            0,     0.525731, -0.000913888,
            -0.5,    -0.309017,    -0.809017,     0.771979,
            0,            0,            0,            1;
    Views[21] <<
                -0.16246,    -0.951057,    -0.262866,  0.000831233,
            -0.850651,            0,     0.525731, -0.000913888,
            -0.5,     0.309017,    -0.809017,     0.771979,
            0,            0,            0,            1;
    Views[22] <<
                0.16246,   -0.951057,   -0.262866, 0.000624331,
            0.850651,           0,    0.525731, -0.00199724,
            -0.5,   -0.309017,    0.809017,    0.767499,
            0,           0,           0,           1;
    Views[23] <<
                0,           -1,            0,  5.45686e-11,
            1,            0,            0, -0.000636778,
            0,            0,            1,     0.766652,
            0,            0,            0,            1;
    Views[24] <<
                -0.16246,    -0.951057,     0.262866, -0.000624331,
            0.850651,            0,     0.525731,  -0.00199724,
            -0.5,     0.309017,     0.809017,     0.767499,
            0,            0,            0,            1;
    Views[25] <<
                -0.16246,   -0.951057,   -0.262866, 0.000831233,
            0.850651,           0,   -0.525731, 0.000913888,
            0.5,   -0.309017,    0.809017,    0.766863,
            0,           0,           0,           1;
    Views[26] <<
                0.16246,    -0.951057,     0.262866, -0.000831233,
            0.850651,            0,    -0.525731,  0.000913888,
            0.5,     0.309017,     0.809017,     0.766863,
            0,            0,            0,            1;
    Views[27] <<
                0.425325,  -0.587785,  -0.688191, 0.00163452,
            -0.850651,          0,  -0.525731, 0.00199724,
            0.309017,   0.809017,       -0.5,   0.770608,
            0,          0,          0,          1;
    Views[28] <<
                -0.425325,    -0.587785,    -0.688191,    0.0021762,
            -0.850651,            0,     0.525731, -0.000913888,
            -0.309017,     0.809017,         -0.5,     0.771002,
            0,            0,            0,            1;
    Views[29] <<
                0,           0,          -1,  0.00276865,
            -1,           0,           0, 0.000636778,
            0,           1,           0,    0.769421,
            0,           0,           0,           1;
    Views[30] <<
                -0.425325,   -0.587785,    0.688191, -0.00163452,
            0.850651,           0,    0.525731, -0.00199724,
            -0.309017,    0.809017,         0.5,    0.768233,
            0,           0,           0,           1;
    Views[31] <<
                0.425325,   -0.587785,    0.688191,  -0.0021762,
            0.850651,           0,   -0.525731, 0.000913888,
            0.309017,    0.809017,         0.5,     0.76784,
            0,           0,           0,           1;
    Views[32] <<
                -0.467086,   -0.866025,   -0.178411, 0.000791388,
            0.356822,           0,   -0.934172,  0.00235918,
            0.809017,        -0.5,    0.309017,     0.76805,
            0,           0,           0,           1;
    Views[33] <<
                -0.467086,    -0.866025,     0.178411, -0.000196527,
            -0.356822,            0,    -0.934172,   0.00281361,
            0.809017,         -0.5,    -0.309017,     0.769761,
            0,            0,            0,            1;
    Views[34] <<
                0,          -1,           0, 5.45686e-11,
            0,           0,          -1,  0.00276865,
            1,           0,           0,    0.768784,
            0,           0,           0,           1;
    Views[35] <<
                0.467086,   -0.866025,   -0.178411, 0.000196527,
            -0.356822,           0,   -0.934172,  0.00281361,
            0.809017,         0.5,   -0.309017,    0.769761,
            0,           0,           0,           1;
    Views[36] <<
                0.467086,    -0.866025,     0.178411, -0.000791388,
            0.356822,            0,    -0.934172,   0.00235918,
            0.809017,          0.5,     0.309017,      0.76805,
            0,            0,            0,            1;
    Views[37] <<
                0.467086,    -0.866025,     0.178411, -0.000791388,
            -0.356822,            0,     0.934172,  -0.00235918,
            -0.809017,         -0.5,    -0.309017,     0.770792,
            0,            0,            0,            1;
    Views[38] <<
                0.467086,   -0.866025,   -0.178411, 0.000196527,
            0.356822,           0,    0.934172, -0.00281361,
            -0.809017,        -0.5,    0.309017,     0.76908,
            0,           0,           0,           1;
    Views[39] <<
                0,          -1,           0, 5.45686e-11,
            0,           0,           1, -0.00276865,
            -1,           0,           0,    0.770058,
            0,           0,           0,           1;
    Views[40] <<
                -0.467086,    -0.866025,     0.178411, -0.000196527,
            0.356822,            0,     0.934172,  -0.00281361,
            -0.809017,          0.5,     0.309017,      0.76908,
            0,            0,            0,            1;
    Views[41] <<
                -0.467086,   -0.866025,   -0.178411, 0.000791388,
            -0.356822,           0,    0.934172, -0.00235918,
            -0.809017,         0.5,   -0.309017,    0.770792,
            0,           0,           0,           1;

    Eigen::Matrix3f x90, y90, z90;
    float cosT = cosf(M_PI);
    float sinT = sinf(M_PI);

    x90 <<
            1.0f,   0.0f,   0.0f,
            0.0f,   cosT,   -sinT,
            0.0f,   sinT,   cosT;
    y90 <<
            cosT,   0.0f,   sinT,
            0.0f,   1.0f,   0.0f,
            -sinT,  0.0f,   cosT;
    z90 <<
            cosT,   sinT,   0.0f,
            -sinT,  cosT,   0.0f,
            0.0f,   0.0f,   1.0f;

    GripRots[0] = y90;
    GripRots[1] = -y90;

    // 8 x ~9 x 3.5
    int i = 0;
    // In meters
    // Middle bar
        // Middle
        GripPoints[i++] << 0.01f, 0.0f, 0.0165f;
        GripPoints[i++] << 0.01f, 0.0f, 0.0165f;
        //
        GripPoints[i++] << -0.01f, 0.0f, 0.0165f;
        GripPoints[i++] << -0.01f, 0.0f, 0.0165f;

        // Top
        GripPoints[i++] << 0.01f, -0.025f, 0.0165f;
        GripPoints[i++] << 0.01f, -0.025f, 0.0165f;
        //
        GripPoints[i++] << -0.01f, -0.025f, 0.0165f;
        GripPoints[i++] << -0.01f, -0.025f, 0.0165f;

        // Bottom
        GripPoints[i++] << 0.01f, 0.025f, 0.0165f;
        GripPoints[i++] << 0.01f, 0.025f, 0.0165f;
        //
        GripPoints[i++] << -0.01f, 0.025f, 0.0165f;
        GripPoints[i++] << -0.01f, 0.025f, 0.0165f;

    // Top Plate Notch Side
        // Middle
        GripPoints[i++] << 0.04f, 0.0415f, 0.0f;
        GripPoints[i++] << 0.04f, 0.0415f, 0.0f;
        // Left
        GripPoints[i++] << 0.0325f, 0.0415f, 0.015f;
        GripPoints[i++] << 0.0325f, 0.0415f, 0.015f;
        // Right
        GripPoints[i++] << 0.0325f, 0.0415f, -0.015f;
        GripPoints[i++] << 0.0325f, 0.0415f, -0.015f;

    // Top Plate Hole Side
        // Middle
        GripPoints[i++] << -0.04f, 0.0435f, 0.0f;
        GripPoints[i++] << -0.04f, 0.0435f, 0.0f;
        // Left
        GripPoints[i++] << -0.0325f, 0.0435f, 0.015f;
        GripPoints[i++] << -0.0325f, 0.0435f, 0.015f;
        // Right
        GripPoints[i++] << -0.0325f, 0.0435f, -0.015f;
        GripPoints[i++] << -0.0325f, 0.0435f, -0.015f;

    // Bottom Plate Notch Side
        // Middle
        GripPoints[i++] << 0.04f, -0.0415f, 0.0f;
        GripPoints[i++] << 0.04f, -0.0415f, 0.0f;
        // Left
        GripPoints[i++] << 0.0325f, -0.0415f, 0.015f;
        GripPoints[i++] << 0.035f, -0.0415f, 0.015f;
        // Right
        GripPoints[i++] << 0.0325f, -0.0415f, -0.015f;
        GripPoints[i++] << 0.0325f, -0.0415f, -0.015f;

    // Bottom Plate Hole Side
        // Middle
        GripPoints[i++] << -0.04f, -0.0435f, 0.0f;
        GripPoints[i++] << -0.04f, -0.0435f, 0.0f;
        // Left
        GripPoints[i++] << -0.0325f, -0.0435f, 0.015f;
        GripPoints[i++] << -0.0325f, -0.0435f, 0.015f;
        // Right
        GripPoints[i++] << -0.0325f, -0.0435f, -0.015f;
        GripPoints[i++] << -0.0325f, -0.0435f, -0.015f;
}

#endif /* CHAIN_LINK_ROTATION_H_ */
